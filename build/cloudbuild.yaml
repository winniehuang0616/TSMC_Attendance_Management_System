steps:
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud container clusters get-credentials tsmc \
          --region=asia-east1-b \
          --project=$PROJECT_ID 
  # Build & push backend
  - name: 'gcr.io/cloud-builders/docker'
    dir: 'backend'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/tsmc-backend:latest', '.']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/tsmc-backend:latest']

  # Build & push frontend
  - name: 'gcr.io/cloud-builders/docker'
    dir: 'frontend'
    args: ['build', '--network=host', '-t', 'gcr.io/$PROJECT_ID/tsmc-frontend:latest', '.']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/tsmc-frontend:latest']

  # Deploy MySQL
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'backend/k8s/mysql/mysql-pvc.yaml']
    env:
      - CLOUDSDK_COMPUTE_REGION=asia-east1-b
      - CLOUDSDK_CONTAINER_CLUSTER=tsmc
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'backend/k8s/mysql/mysql-deployment.yaml']
    env:
      - CLOUDSDK_COMPUTE_REGION=asia-east1-b
      - CLOUDSDK_CONTAINER_CLUSTER=tsmc
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'backend/k8s/mysql/mysql-service.yaml']
    env:
      - CLOUDSDK_COMPUTE_REGION=asia-east1-b
      - CLOUDSDK_CONTAINER_CLUSTER=tsmc

  # Deploy backend
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'backend/k8s/backend/backend-deployment.yaml']
    env:
      - CLOUDSDK_COMPUTE_REGION=asia-east1-b
      - CLOUDSDK_CONTAINER_CLUSTER=tsmc
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'backend/k8s/backend/backend-service.yaml']
    env:
      - CLOUDSDK_COMPUTE_REGION=asia-east1-b
      - CLOUDSDK_CONTAINER_CLUSTER=tsmc
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'backend/k8s/backend/backend-hpa.yaml']
    env:
      - CLOUDSDK_COMPUTE_REGION=asia-east1-b
      - CLOUDSDK_CONTAINER_CLUSTER=tsmc

  # Deploy frontend
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'frontend/k8s/frontend-deployment.yaml']
    env:
      - CLOUDSDK_COMPUTE_REGION=asia-east1-b
      - CLOUDSDK_CONTAINER_CLUSTER=tsmc
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'frontend/k8s/frontend-service.yaml']
    env:
      - CLOUDSDK_COMPUTE_REGION=asia-east1-b
      - CLOUDSDK_CONTAINER_CLUSTER=tsmc
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'frontend/k8s/frontend-hpa.yaml']
    env:
      - CLOUDSDK_COMPUTE_REGION=asia-east1-b
      - CLOUDSDK_CONTAINER_CLUSTER=tsmc

  # Deploy ingress
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'frontend/k8s/ingress.yaml']
    env:
      - CLOUDSDK_COMPUTE_REGION=asia-east1-b
      - CLOUDSDK_CONTAINER_CLUSTER=tsmc
  # Rollout restart to enforce image pull
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['rollout', 'restart', 'deployment/backend']
    env:
      - CLOUDSDK_COMPUTE_REGION=asia-east1-b
      - CLOUDSDK_CONTAINER_CLUSTER=tsmc
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['rollout', 'restart', 'deployment/frontend']
    env:
      - CLOUDSDK_COMPUTE_REGION=asia-east1-b
      - CLOUDSDK_CONTAINER_CLUSTER=tsmc
images:
  - gcr.io/$PROJECT_ID/tsmc-backend
  - gcr.io/$PROJECT_ID/tsmc-frontend

options:
  logging: CLOUD_LOGGING_ONLY
